package stepDefinitions;

import org.junit.Assert;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import io.cucumber.java.Before;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import io.github.bonigarcia.wdm.WebDriverManager;
import pageObjects.Add_EditBatches_adminPage;
import pageObjects.Add_EditClasses_AdminPage;
import pageObjects.AnsSecurityQuestPage;
import pageObjects.LaunchApplicationPage;
import pageObjects.LoginPage;
import pageObjects.ManageAssignments_AddEditPage;
import pageObjects.ManageAttendancePage;
import pageObjects.ManageBatchesPage;
import pageObjects.ManageClassesAdminView;

public class ManageBatchesSteps extends BaseClass{

	@Before
	public void setup()
	{
		String br=readconfig.getBrowser();

		if (br.equals("chrome"))
		{	
			WebDriverManager.chromedriver().setup();
			driver=new ChromeDriver();}
		else if (br.equals("firefox"))
		{
			WebDriverManager.chromedriver().setup();
			driver=new FirefoxDriver();}
	}
	
	@Given("Admin is on Add tab of ADD\\/Edit batches page \\(admin) by clicking on Add Batch in Manage Batches Page\\(admin)")
	public void admin_is_on_add_tab_of_add_edit_batches_page_admin_by_clicking_on_add_batch_in_manage_batches_page_admin() {
		
		ap=new  LaunchApplicationPage(driver);
		lp=new LoginPage(driver);
		sp=new AnsSecurityQuestPage(driver);
		driver.get(readconfig.getApplicationURL());
		driver.manage().window().maximize();
		ap.clickLogin();

		lp.setUsername(username);
		lp.setPassword(password);
		lp.clickSubmit();
		mbp.clickBatches();
		mbp.clickAddBatch();
	}

	@When("Admin clicks on submit button after entering Batch Name, Batch Description,select Batch Status, enters BatchNo. of classes.")
	public void admin_clicks_on_submit_button_after_entering_batch_name_batch_description_select_batch_status_enters_batch_no_of_classes() {
		aebp.clickAdd();
		aebp.setBatchName();
		aebp.setBatchDesc();
		aebp.clickRadActive();
		aebp.setBatchNoClasses();
		aebp.clickSubmit();
	}

	@Then("Created Batch details will be displayed in Manage Batches Page\\(Admin)   with auto generated Created Date and Modified date in MM\\/DD\\/YY format.")
	public void created_batch_details_will_be_displayed_in_manage_batches_page_admin_with_auto_generated_created_date_and_modified_date_in_mm_dd_yy_format() {

		String current_msg=aebp.getMessage();
		String original_msg="New Batch is added successfully";
		Assert.assertEquals(current_msg, original_msg);
	}

	@Given("Admin is on Edit tab of ADD\\/Edit batches page \\(admin) by clicking on edit icon")
	public void admin_is_on_edit_tab_of_add_edit_batches_page_admin_by_clicking_on_edit_icon() {

		mbp.clickBatches();
		mbp.clickEditButton();
	}

	@When("Admin clicks on submit button after updating Batch Name, Batch Description,select Batch Status, Baych No. of classes")
	public void admin_clicks_on_submit_button_after_updating_batch_name_batch_description_select_batch_status_baych_no_of_classes() {

		aebp.clickEdit();
		aebp.setBatchName();
		aebp.setBatchDesc();
		aebp.clickRadActive();
		aebp.setBatchNoClasses();
		aebp.clickSubmit();
	}

	@Then("Updated Batch details will be displayed in Manage Batches Page\\(Admin) screen   with same autogenerated creation date and  different Modified date in MM\\/DD\\/YY format")
	public void updated_batch_details_will_be_displayed_in_manage_batches_page_admin_screen_with_same_autogenerated_creation_date_and_different_modified_date_in_mm_dd_yy_format() {

		String current_msg_edit=aebp.getMessage();
		String original_msg_edit=" Batch details are updated  successfully";
		Assert.assertEquals(current_msg_edit, original_msg_edit);
	}

	@Given("Admin is on Manage Batches Page\\(admin) screen")
	public void admin_is_on_manage_batches_page_admin_screen() {

		mbp.clickBatches();
	}

	@When("Admin clicks on particular batch trash icon")
	public void admin_clicks_on_particular_batch_trash_icon() {

		mbp.clickDeleteButton();
	}

	@Then("Batch will be deleted from the Batches List in Manage Batches Page\\(admin)")
	public void batch_will_be_deleted_from_the_batches_list_in_manage_batches_page_admin() {


		String current_msg_delete=aebp.getMessage();
		String original_msg_delete=" Batch details are updated  successfully";
		Assert.assertEquals(current_msg_delete, original_msg_delete);
	}

}
